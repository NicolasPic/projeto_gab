<div class="gabhoot-container">

    <!-- Cont√™iner central sobrepondo as metades -->
    <div class="metade-gabhoot-container gabhoot-superior"></div>

    <div class="centro-gabhoot-container">
        <h1>GABHoot</h1>
    </div>

    <div class="metade-gabhoot-container gabhoot-inferior">
        <p id="tempo-restante">Tempo restante: <span id="tempo">35</span> segundos</p>
        <form id="form-resposta" method="POST">
            <input type="hidden" name="resposta" id="resposta-selecionada">
            <input type="hidden" name="tempoRestante" id="tempo-restante-valor">

            <div class="pergunta">
                <h2>{{pergunta.texto}}</h2>
                {{#each pergunta.respostas}}
                <div>
                    <label>
                        <input type="radio" name="resposta" value="{{id}}" onchange="selecionarResposta(this.value)">
                        {{texto}}
                    </label>
                </div>
                {{/each}}
            </div>

            <button type="submit">Enviar Resposta</button>
        </form>

        <!-- Feedback -->
        <div id="feedback" style="display: none;">
            <p id="mensagem-feedback"></p>
            <button id="proxima-pergunta-btn" style="display: none;">Pr√≥xima Pergunta</button>
        </div>
    </div>
</div>

<script>
    let tempo = 35;
    const tempoRestanteEl = document.getElementById('tempo');
    const form = document.getElementById('form-resposta');
    const inputResposta = document.getElementById('resposta-selecionada');
    const inputTempoRestante = document.getElementById('tempo-restante-valor');
    const feedbackDiv = document.getElementById('feedback');
    const mensagemFeedback = document.getElementById('mensagem-feedback');
    const proximaPerguntaBtn = document.getElementById('proxima-pergunta-btn');

    function selecionarResposta(valor) {
        inputResposta.value = valor || '';
    }

    const contador = setInterval(() => {
        tempo--;
        tempoRestanteEl.textContent = tempo;

        if (tempo <= 0) {
            clearInterval(contador);
            inputTempoRestante.value = 0;
            enviarResposta();
        }
    }, 1000);

    form.addEventListener('submit', (event) => {
        event.preventDefault();
        enviarResposta();
    });

    async function enviarResposta() {
        clearInterval(contador);
        inputTempoRestante.value = tempo;

        const respostaSelecionada = inputResposta.value;

        if (!respostaSelecionada) {
            alert('Selecione uma resposta antes de enviar.');
            return;
        }

        // Enviar resposta via fetch
        const response = await fetch('/jogar/proxima', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                resposta: respostaSelecionada,
                tempoRestante: tempo
            })
        });

        const data = await response.json();

        // Mostrar feedback
        if (data.correta) {
            mensagemFeedback.textContent = 'Resposta correta! üéâ';
            mensagemFeedback.style.color = 'green';
        } else {
            mensagemFeedback.textContent = 'Resposta incorreta. üò¢';
            mensagemFeedback.style.color = 'red';
        }

        feedbackDiv.style.display = 'block';
        proximaPerguntaBtn.style.display = 'block';

        // Bot√£o para avan√ßar
        proximaPerguntaBtn.onclick = () => {
            if (data.proximaPergunta) {
                window.location.href = '/jogar/gabhoot';
            } else {
                window.location.href = '/jogar/resultado';
            }
        };

        setTimeout(() => proximaPerguntaBtn.click(), 3000);
    }
</script>
