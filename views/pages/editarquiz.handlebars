<div class="body-container criar-quiz-view">
    <div class="half-container superior"></div>

    <div class="central-banner">
        Editar Quiz
    </div>

    <div class="half-container inferior">


        <div class="container" style="margin-top: -450px; justify-content: flex-start; gap: 15px; background-color: rgba(var(--background-light), 0.9);">
            <form id="quizForm">
                <div class="input-group">
                    <label for="nome">Nome do Quiz:</label>
                    <input type="text" id="nome" name="nome" value="{{quiz.nome}}" placeholder="Digite o nome do quiz" required>
                </div>
                <div id="perguntasContainer" class="perguntas-list">
                    <ul id="listaPerguntas" class="perguntas-list"></ul>
                </div>
                <button type="button" id="addPergunta" class="button">Adicionar Pergunta</button>
                <button type="button" id="salvarQuiz" class="button">Salvar Alterações</button>
            </form>
             
            <button type="button" onclick="window.location.href='{{voltarUrl}}'" class="button">Voltar</button>
        </div>
    </div>
</div>

<script>
const quiz = {{{json quiz}}};
const perguntasSalvas = quiz.perguntas || [];
const listaPerguntas = document.getElementById('listaPerguntas');
const addPergunta = document.getElementById('addPergunta');

addPergunta.addEventListener('click', () => criarFormularioPergunta());

function atualizarListaPerguntas() {
    listaPerguntas.innerHTML = '';
    perguntasSalvas.forEach((pergunta, index) => {
        const li = document.createElement('li');
        li.classList.add('pergunta-item');
        li.innerHTML = `
            <div class="pergunta-header">
                <strong>${index + 1}. ${pergunta.texto} (${pergunta.tipo})</strong>
                <div class="pergunta-botoes">
                    <button type="button" class="editarPergunta button">Editar</button>
                    <button type="button" class="removerPergunta button">Remover</button>
                </div>
            </div>
        `;

        li.querySelector('.editarPergunta').addEventListener('click', () => criarFormularioPergunta(pergunta, index));

        li.querySelector('.removerPergunta').addEventListener('click', async () => {
            const confirmar = confirm('Você tem certeza de que deseja excluir esta pergunta?');
            if (!confirmar) return;

            const perguntaId = perguntasSalvas[index]?.id;

            try {
                if (perguntaId) {
                    const response = await fetch(`/admin/excluir-pergunta/${perguntaId}`, {
                        method: 'DELETE',
                    });

                    if (!response.ok) {
                        alert('Erro ao excluir a pergunta no servidor.');
                        return;
                    }
                }

                perguntasSalvas.splice(index, 1);
                atualizarListaPerguntas();
                alert('Pergunta excluída com sucesso!');
            } catch (error) {
                console.error('Erro ao excluir a pergunta:', error);
                alert('Erro ao excluir a pergunta.');
            }
        });

        listaPerguntas.appendChild(li);
    });
}

function criarFormularioPergunta(pergunta = null, index = null) {
    const perguntaDiv = document.createElement('div');
    perguntaDiv.classList.add('pergunta');
    perguntaDiv.innerHTML = `
        <div class="pergunta-header">
            <label>Pergunta:</label>
            <input type="text" class="textoPergunta" value="${pergunta?.texto || ''}" required>
        </div>
        <div class="pergunta-tipo">
            <label>Tipo:</label>
            <select class="tipoPergunta">
                <option value="multipla" ${pergunta?.tipo === 'multipla' ? 'selected' : ''}>Múltipla Escolha</option>
                <option value="vf" ${pergunta?.tipo === 'vf' ? 'selected' : ''}>Verdadeiro/Falso</option>
            </select>
        </div>
        <div class="respostas-container">
            <h4>Respostas</h4>
        </div>
        <div class="pergunta-botoes">
            <button type="button" class="salvarPergunta button">${index !== null ? 'Salvar Alterações' : 'Salvar Pergunta'}</button>
            <button type="button" class="cancelarPergunta button">Cancelar</button>
        </div>
    `;

    const tipoSelect = perguntaDiv.querySelector('.tipoPergunta');
    const respostasContainer = perguntaDiv.querySelector('.respostas-container');
    const salvarPergunta = perguntaDiv.querySelector('.salvarPergunta');
    const cancelarPergunta = perguntaDiv.querySelector('.cancelarPergunta');

    tipoSelect.addEventListener('change', () => {
        respostasContainer.innerHTML = '';
        if (tipoSelect.value === 'multipla') {
            for (let i = 0; i < 5; i++) {
                const resposta = pergunta?.respostas[i] || { texto: '', correta: 0 };
                const respostaDiv = document.createElement('div');
                respostaDiv.classList.add('resposta-item');
                respostaDiv.innerHTML = `
                    <input type="text" class="resposta-texto" placeholder="Opção ${i + 1}" value="${resposta.texto}" required>
                    <label>Correta:</label>
                    <input type="radio" name="correta-${index}" value="${i}" ${resposta.correta === 1 ? 'checked' : ''}>
                `;
                respostasContainer.appendChild(respostaDiv);
            }
        } else if (tipoSelect.value === 'vf') {
            ['Verdadeiro', 'Falso'].forEach((texto, indexVF) => {
                const respostaDiv = document.createElement('div');
                respostaDiv.classList.add('resposta-item');
                respostaDiv.innerHTML = `
                    <input type="text" class="resposta-texto" value="${texto}" readonly>
                    <label>Correta:</label>
                    <input type="radio" name="correta-${index}" value="${indexVF}" ${pergunta?.respostas[indexVF]?.correta === 1 ? 'checked' : ''}>
                `;
                respostasContainer.appendChild(respostaDiv);
            });
        }
    });

    salvarPergunta.addEventListener('click', () => {
        const textoPergunta = perguntaDiv.querySelector('.textoPergunta').value;
        const tipoPergunta = tipoSelect.value;
        const respostas = Array.from(respostasContainer.querySelectorAll('.resposta-item')).map(respostaDiv => ({
            texto: respostaDiv.querySelector('.resposta-texto').value,
            correta: respostaDiv.querySelector('input[type="radio"]').checked ? 1 : 0
        }));

        if (!textoPergunta || respostas.length === 0 || !respostas.some(r => r.correta === 1)) {
            alert('Preencha todos os campos e marque uma resposta como correta.');
            return;
        }

        if (index !== null) {
            perguntasSalvas[index] = { ...perguntasSalvas[index], texto: textoPergunta, tipo: tipoPergunta, respostas };
        } else {
            perguntasSalvas.push({ texto: textoPergunta, tipo: tipoPergunta, respostas });
        }

        atualizarListaPerguntas();
        perguntaDiv.remove();
    });

    cancelarPergunta.addEventListener('click', () => {
        perguntaDiv.remove();
    });

    tipoSelect.dispatchEvent(new Event('change'));
    listaPerguntas.appendChild(perguntaDiv);
}

document.getElementById('salvarQuiz').addEventListener('click', async () => {
    const nome = document.getElementById('nome').value;

    if (!nome || !quiz.id) {
        alert('Erro ao salvar quiz! Nome ou ID não definido.');
        return;
    }

    try {
        const response = await fetch(`/admin/editar-quiz/${quiz.id}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ nome, perguntas: perguntasSalvas }),
        });

        if (response.ok) {
            alert('Quiz atualizado com sucesso!');
            window.location.href = `/admin`;
        } else {
            alert('Erro ao atualizar quiz.');
        }
    } catch (error) {
        console.error('Erro ao salvar quiz:', error);
    }
});

atualizarListaPerguntas();

</script>
